{"version":3,"sources":["reducers/category.js","reducers/search.js","reducers/order.js","reducers/mainReducer.js","store/index.js","components/Header.js","components/Footer.js","components/Category.js","actions/actionfile.js","container/Home.js","components/Filter.js","components/SearchDisplay.js","container/Search.js","components/DetailsDisplay.js","components/Review.js","container/Detail.js","components/About.js","components/Contact.js","container/PlaceOrder.js","components/DashboardDisplay.js","container/AdminDashboard.js","components/Routing.js","index.js"],"names":["category","state","action","type","Categories","payload","search","SearchResult","ProductDetails","ProductReviews","order","orderStatus","allOrders","rootReducer","combineReducers","store","createStore","reducer","applyMiddleware","promiseMiddleware","logger","Header","renderSearch","searchQuery","document","getElementsByClassName","value","props","history","push","alert","renderEnter","e","searchBtn","which","keyCode","click","className","to","id","onKeyPress","this","placeholder","onClick","href","React","Component","withRouter","Footer","style","width","body","scrollTop","documentElement","target","rel","slideImages","Category","Fragment","src","alt","data","map","item","title","image1","image2","image3","image4","keyword","textDecoration","renderDisplay","cData","api_key","order_url","query","fetch","method","headers","then","res","json","Admin","Home","dispatch","catData","prototypes","propTypes","func","connect","Filter","renderFilter","limit","split","sData","filteredData","products","filter","price","current_price","fData","background","borderRadius","boxShadow","marginTop","maxWidth","name","SearchDisplay","length","thumbnail","asin","color","reviews","rating","before_price","savings_amount","Search","setState","queryParam","query_arr","location","nextProps","searchData","settings","dots","infinite","speed","slidesToShow","slidesToScroll","DetailsDisplay","productData","sessionStorage","setItem","JSON","stringify","product","images","idx","symbol","description","feature_bullets","renderDetails","dData","Review","rData","console","log","date","review","Detail","detData","revData","match","params","detailsData","reviewData","About","Contact","tdate","Date","PlaceOrder","blurHandler","errors","isnum","test","lastAtpos","lastIndexOf","lastDotpos","indexOf","changeHandler","quantitychangeHandler","quantity","totalPrice","currentPrice","onSubmit","orderDetails","orderData","getDate","getMonth","getFullYear","fname","lname","houseadd","apartment","city","country","postCode","phone","email","productTitle","beforePrice","savingAmount","payment","status","delivered","parse","getItem","autoComplete","onChange","event","onBlur","readOnly","colSpan","checked","protoTypes","PropTypes","orderResponse","DashboardDisplay","changeStatus","bodyData","uStatus","renderBody","oData","Dashboard","updateStatus","overflowX","orders","Routing","exact","path","component","ReactDOM","render","Store","getElementById"],"mappings":"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","file":"static/js/main.9c77e437.chunk.js","sourcesContent":["const category = (state={}, action) => {\r\n    switch(action.type){\r\n        case 'CATEGORIES':\r\n            return { ...state, Categories: action.payload }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default category;","const search = (state={}, action) => {\r\n    switch(action.type){\r\n        case 'SEARCH':\r\n            return { ...state, SearchResult: action.payload }\r\n\r\n        case 'DETAIL':\r\n            return { ...state, ProductDetails: action.payload }\r\n\r\n        case 'REVIEW':\r\n            return { ...state, ProductReviews: action.payload }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default search;","const order = (state={},action) => {\r\n    switch (action.type) {\r\n        case 'ORDER':\r\n            return { ...state, orderStatus: action.payload }\r\n        \r\n        case 'ADMIN':\r\n            return { ...state, allOrders: action.payload }\r\n        \r\n        default:\r\n            return state\r\n    \r\n    }\r\n}\r\n\r\nexport default order;","import { combineReducers } from 'redux';\r\nimport category from './category';\r\nimport search from './search';\r\nimport order from './order';\r\n\r\nconst rootReducer = combineReducers({\r\n    category,\r\n    search,\r\n    order\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from '../reducers/mainReducer';\r\nimport { logger } from 'redux-logger';\r\nimport promiseMiddleware from 'redux-promise';\r\n\r\nconst store = createStore(reducer, applyMiddleware(promiseMiddleware, logger));\r\n\r\nexport default store;","import React from 'react';\r\nimport './Header.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n\r\n    renderSearch = () => {\r\n        const searchQuery = document.getElementsByClassName('search')[0];\r\n        if(searchQuery.value){\r\n            this.props.history.push(`/search?k=${searchQuery.value}&category=aps`);\r\n            searchQuery.value = '';\r\n        }\r\n        else{\r\n            alert(\"Search Box Should Not Be Empty.\")\r\n        }\r\n    }\r\n\r\n    renderEnter = (e) => {\r\n        const searchBtn = document.getElementsByClassName('search-btn')[0];\r\n        if(e.which === 13 || e.keyCode === 13) {\r\n            searchBtn.click();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-inverse\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"navbar-header\">\r\n                            <Link to='/' className=\"navbar-brand\"><b id=\"brand\">amazed</b>.in</Link>\r\n                        </div>\r\n\r\n                        <span className=\"searchbar\">\r\n                            <input onKeyPress={this.renderEnter} className=\"search\" type=\"text\" placeholder=\"Search\"/>\r\n                            <button onClick={this.renderSearch} className=\"search-btn\"><i className=\"fa fa-search\"></i></button>\r\n                        </span>\r\n    \r\n                        <ul className=\"nav navbar-nav navbar-right\">\r\n                            <li><Link to='/orders'>Orders</Link></li>\r\n                            <li><a href=\"#\"><span className=\"glyphicon glyphicon-user\"></span> Sign Up</a></li>\r\n                            <li><a href=\"#\"><span className=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","\r\nimport { Link } from 'react-router-dom';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    const backToTop = () => {\r\n        document.body.scrollTop = 0; \r\n        document.documentElement.scrollTop = 0;\r\n    }\r\n\r\n    return (\r\n        <footer>\r\n            <center>\r\n                <button className=\"btn btn-primary\" style={{width:'100%'}} onClick={backToTop}>Back To Top</button>\r\n            </center>\r\n            <div className=\"container\">\r\n                <div className=\"top-footer\">\r\n                    <div className=\"reg\">\r\n                        <p className=\"top-heading\">Registered Office</p>\r\n                        <p className=\"details\">Amazed.in<br/>\r\n                            Buildings Alyssa, Begonia &<br/>\r\n                            Clove Embassy Tech Village,<br/>\r\n                            Outer Ring Road, Devarabeesanahalli Village,<br/>\r\n                            Bengaluru, 560103,<br/>\r\n                            Karnataka, India</p>\r\n                        \r\n                        <p className=\"details\">phone: 9538852608</p>\r\n                    </div>\r\n                    <div className=\"mail\">\r\n                        <p className=\"top-heading\">Mail Us</p>\r\n                        <p className=\"details\">Amazed.in<br/>\r\n                            Buildings Alyssa, Begonia &<br/>\r\n                            Clove Embassy Tech Village,<br/>\r\n                            Outer Ring Road, Devarabeesanahalli Village,<br/>\r\n                            Bengaluru, 560103,<br/>\r\n                            Karnataka, India</p>\r\n                        <p className=\"details\">Email: info@amazed.in</p>\r\n                    </div>\r\n                    <div className=\"socialMedia\">\r\n                        <p className=\"top-heading\">Social Media</p>\r\n                        <p className=\"details\">\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.facebook.com/amazed.in\">Facebook</a>\r\n                        </p>\r\n                        <p className=\"details\">\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://twitter.com/amazed.in\">Twitter</a>\r\n                        </p>\r\n                        <p className=\"details\">\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.instagram.com/pick_your_mandala/\">Instagram</a>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"about\">\r\n                        <p className=\"top-heading\">About</p>\r\n                        <p className=\"details\">\r\n                            <Link to='/about'>About Us</Link>\r\n                            </p>\r\n                        <p className=\"details\">\r\n                        <Link to='/contact'>Contact Us</Link>\r\n                            </p>\r\n                    </div>\r\n                    <div className=\"subscription\">\r\n                        <p className=\"top-heading\">Subscription</p>                        \r\n                    </div>\r\n                </div>\r\n                <hr className=\"line\"/>\r\n                <center>\r\n                    <small>&copy; 2021. All rights are reserved</small>\r\n                </center>\r\n\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Slide } from 'react-slideshow-image';\r\nimport './Category.css';\r\nimport 'react-slideshow-image/dist/styles.css';\r\n\r\nconst slideImages = [\r\n    'images/Slider-Image1.jpg',\r\n    'images/Slider-Image2.jpg',\r\n    'images/Slider-Image3.jpg',\r\n    'images/Slider-Image4.jpg'\r\n  ];\r\n\r\nconst Category = (props) => {\r\n    const renderDisplay = (data) => {\r\n        if(data) {\r\n            return data.map((item) => {\r\n                return (\r\n                    <div className=\"categoryCard\" key={item.id}>\r\n                        <h3 className=\"cardTitle\"><u>{item.title}</u></h3>\r\n                        <img src={`${item.image1}`} alt=\"img1\"/>\r\n                        <img src={`${item.image2}`} alt=\"img2\"/>\r\n                        <img src={`${item.image3}`} alt=\"img3\"/>\r\n                        <img src={`${item.image4}`} alt=\"img4\"/>\r\n                        <div>\r\n                            <Link to={`/search?k=${item.keyword}&category=${item.type}`} style={{textDecoration:'none'}}><h4 className=\"link\">SEE MORE</h4></Link>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n    } \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"slide-container\">\r\n                <Slide>\r\n                    <div>\r\n                        <div className=\"sliderImage\">\r\n                            <img src={`${slideImages[0]}`} alt=\"slider-img-1\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"sliderImage\">\r\n                            <img src={`${slideImages[1]}`} alt=\"slider-img-2\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"sliderImage\">\r\n                            <img src={`${slideImages[2]}`} alt=\"slider-img-3\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"sliderImage\">\r\n                            <img src={`${slideImages[3]}`} alt=\"slider-img-4\"/>\r\n                        </div>\r\n                    </div>\r\n                </Slide>\r\n            </div>\r\n\r\n            {/* <hr/> */}\r\n\r\n            <div className=\"container home-container\">\r\n                {/* <h2 className=\"homeTitle\">Categories</h2> */}\r\n                <center>\r\n                    {renderDisplay(props.cData)}\r\n                </center>\r\n                <hr/>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Category;","const local_url = 'http://localhost:8900/category';\r\nconst api_key = '9dc9601208mshb32cdcb5fb7c705p1491ffjsn9d089396e6f3';\r\nconst search_url ='https://amazon-product-reviews-keywords.p.rapidapi.com/product/search?country=IN&';\r\nconst detail_url = 'https://amazon-product-reviews-keywords.p.rapidapi.com/product/details?country=IN&asin=';\r\nconst review_url = 'https://amazon-product-reviews-keywords.p.rapidapi.com/product/reviews?country=IN&variants=1&top=1&asin=';\r\nconst order_url = 'http://localhost:8900/order';\r\n\r\n\r\nexport function categories(){\r\n    const output = fetch(local_url, {method:'GET'})\r\n    .then((res) => res.json())\r\n\r\n    return {\r\n        type: 'CATEGORIES',\r\n        payload: output\r\n    }\r\n}\r\n\r\nexport function search(query){\r\n    const output = fetch(`${search_url}${query}`, {\r\n        method:'GET',\r\n        headers: {\r\n            'x-rapidapi-key': api_key,\r\n            'x-rapidapi-host': 'amazon-product-reviews-keywords.p.rapidapi.com'\r\n        }\r\n    })\r\n    .then((res) => res.json())\r\n\r\n    return {\r\n        type: 'SEARCH',\r\n        payload: output\r\n    }\r\n}\r\n\r\nexport function detail(asin){\r\n    const output = fetch(`${detail_url}${asin}`, {\r\n        method:'GET',\r\n        headers: {\r\n            'x-rapidapi-key': api_key,\r\n            'x-rapidapi-host': 'amazon-product-reviews-keywords.p.rapidapi.com'\r\n        }\r\n    })\r\n    .then((res) => res.json())\r\n\r\n    return {\r\n        type: 'DETAIL',\r\n        payload: output\r\n    }\r\n}\r\n\r\nexport function review(asin){\r\n    const output = fetch(`${review_url}${asin}`, {\r\n        method:'GET',\r\n        headers: {\r\n            'x-rapidapi-key': '38e2130a63msh67b11c5d3f7ea45p16ba5bjsnd7ab9ff6429a',\r\n            'x-rapidapi-host': 'amazon-product-reviews-keywords.p.rapidapi.com'\r\n        }\r\n    })\r\n    .then((res) => res.json())\r\n\r\n    return {\r\n        type: 'REVIEW',\r\n        payload: output\r\n    }\r\n}\r\n\r\nexport function placeOrder(orderDetails){\r\n    const output = fetch(order_url, {\r\n        method:'POST',\r\n        headers:{\r\n                    'Accept':'application/json',\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body: JSON.stringify(orderDetails)\r\n                })\r\n    .then((res) => res.json())\r\n\r\n    return {\r\n        type: 'ORDER',\r\n        payload: output\r\n    }\r\n}\r\n\r\nexport function Admin(){\r\n    const output = fetch(order_url, {method:'GET'})\r\n    .then((res) => res.json())\r\n\r\n    return {\r\n        type: 'ADMIN',\r\n        payload: output\r\n    }\r\n}","import React from 'react';\r\nimport Category from '../components/Category';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { categories } from '../actions/actionfile';\r\n\r\nclass Home extends React.Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(categories());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Category cData={this.props.catData.Categories}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nHome.prototypes = {\r\n    dispatch: propTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        catData: state.category\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);","import './Filter.css';\r\n\r\nconst Filter = (props) => {\r\n    const renderFilter = (e) => {\r\n        const limit = e.target.value.split('-');\r\n\r\n        if(props.sData){\r\n            const filteredData = props.sData.SearchResult.products.filter((item) => {\r\n                return limit[0] <= item.price.current_price && item.price.current_price <= limit[1]\r\n            })\r\n            props.fData(filteredData);\r\n        }\r\n    }\r\n\r\n    const filterStyle = {\r\n        background: \"#ecf3f9\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"4px 4px 12px grey\",\r\n        marginTop: \"20px\",\r\n        maxWidth: \"80%\"\r\n    }\r\n\r\n    return (\r\n        <div style={filterStyle} className=\"container\">\r\n            <div className=\"container\">\r\n                <h2 className=\"filterTitle\">Filter</h2>\r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\" value=\"0-100000000\"/> All</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\" value=\"0-500\"/> Under Rs.500</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\" value=\"500-1000\"/> Rs.500 - Rs.1000</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\" value=\"1000-5000\"/> Rs.1000 - Rs.5000</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\"value=\"5000-10000\"/> Rs.5000 - Rs.10000</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\"value=\"10000-20000\"/> Rs.10000 - Rs.20000</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\"value=\"20000-50000\"/> Rs.20000 - Rs.50000</label>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label><input onClick={renderFilter} type=\"radio\" name=\"amount\"value=\"50000-1000000\"/> Over Rs.50000</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import { Link } from 'react-router-dom';\r\nimport './SearchDisplay.css';\r\n\r\nconst SearchDisplay = (props) => {\r\n    const renderSearch = (data) => {\r\n        if(data){\r\n            if(data.products.length > 0){\r\n                return data.products.map((item) => {\r\n                    return (\r\n                        <div className=\"searchContainer\" key={item.asin}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-4\">\r\n                                    <center>\r\n                                        <img src={item.thumbnail} alt=\"product-img\"/>\r\n                                    </center>\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-8\">\r\n                                    <Link to={`/detail/${item.asin}`} style={{textDecoration:'none'}}><h3 className=\"link\">{item.title}</h3></Link>\r\n                                    <div>\r\n                                        <p><b style={{color:'orange'}}>Rating: </b><span className=\"rating\">{item.reviews.rating} </span>out of 5</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p>Rs.<b className=\"amount\">{item.price.current_price}</b>&nbsp; &nbsp;<del>Rs.{item.price.before_price}</del></p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p>You Save Rs.<b className=\"amount\">{item.price.savings_amount}</b></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            else{\r\n                return (\r\n                    <div className=\"noData\">\r\n                        <h3><b>No Data Found</b></h3>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"loader\">\r\n                    <img src=\"/images/loader.gif\" alt=\"loader\"/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                renderSearch(props.sData)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchDisplay;","import React from 'react';\r\nimport Filter from '../components/Filter';\r\nimport SearchDisplay from '../components/SearchDisplay';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { search } from '../actions/actionfile';\r\n\r\n\r\nclass Search extends React.Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            queryParam: \"\",\r\n            data: { SearchResult: null }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const query_arr = this.props.location.search.split('=');\r\n        this.props.dispatch(search(`keyword=${query_arr[1]}=${query_arr[2]}`));\r\n        this.setState({\r\n            queryParam: this.props.location.search\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.state.queryParam !== this.props.location.search){\r\n            const query_arr = this.props.location.search.split('=');\r\n            this.props.dispatch(search(`keyword=${query_arr[1]}=${query_arr[2]}`));\r\n            this.setState({\r\n                queryParam: this.props.location.search,\r\n                data: { SearchResult: null }\r\n            })\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            data: nextProps.searchData\r\n        })\r\n    }\r\n\r\n    filter = (filteredData) => {\r\n        this.setState({\r\n            data: {SearchResult: {products: filteredData}}\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col col-md-3\">\r\n                        <Filter fData={(filteredData) => {this.filter(filteredData)}} sData={this.props.searchData}/>\r\n                    </div>\r\n                    <div className=\"col col-md-9\">\r\n                        <SearchDisplay sData={this.state.data.SearchResult}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.prototypes = {\r\n    dispatch: propTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchData: state.search\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search);","import React from 'react';\r\nimport Slider from 'react-slick';\r\nimport { Link } from 'react-router-dom';\r\nimport './DetailDisplay.css';\r\n\r\nvar settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n};\r\n\r\nconst DetailsDisplay = (props) => {\r\n    const renderDetails = (data) => {\r\n        const productData = () => {\r\n            sessionStorage.setItem('productData', JSON.stringify(data));\r\n        }\r\n\r\n        if(data) {\r\n            return (\r\n                <React.Fragment>\r\n                    <h2 className=\"detailTitle\">{data.product.title}</h2>\r\n                    <Slider {...settings}>\r\n                        {\r\n                            data.product.images.map((item, idx) => {\r\n                                return (\r\n                                    <div className=\"datailImage\" key={idx}>\r\n                                        <center>\r\n                                            <img src={item} alt=\"detail-img\"/>\r\n                                        </center>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Slider>\r\n\r\n                    <hr/>\r\n                    <div className=\"description\">\r\n                        <p><b>Current Price: </b>{data.product.price.symbol} <span className=\"price\">{data.product.price.current_price}</span> &nbsp; &nbsp; <del>{data.product.price.symbol} {data.product.price.before_price}</del></p>\r\n\r\n                        <p><b>Discount: </b>{data.product.price.symbol} <span className=\"price\">{data.product.price.savings_amount}</span></p>\r\n                        \r\n                        <div>\r\n                            <Link to=\"/cart\"><button onClick={productData} className=\"btn btn-warning\">Add to cart</button></Link>\r\n                            &nbsp;\r\n                            &nbsp;\r\n                            <Link to=\"/buynow\"><button onClick={productData} className=\"btn btn-warning\">Buy Now</button></Link>\r\n                        </div><br/>\r\n                        \r\n                        <p><b>Description: </b>{data.product.description || 'None'}</p>\r\n                        <p><b>Features:</b></p>\r\n                        <ul>\r\n                            {\r\n                                data.product.feature_bullets.map((item, idx) => {\r\n                                    return (<li key={idx}>{item}</li>)\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <center>\r\n                        <img src=\"/images/loader.gif\" alt=\"loader\"/>\r\n                    </center>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {renderDetails(props.dData)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsDisplay;","import './Review.css';\r\n\r\nconst Review = (props) => {\r\n    const renderReviews = (data) => {\r\n        if(data){\r\n            console.log(data)\r\n            if(data.reviews.length > 0){\r\n                return data.reviews.map((item) => {\r\n                    return (\r\n                        <div className=\"reviews\" key={item.id}>\r\n                            <h3 className=\"reviewTitle\">{item.name}</h3>\r\n                            <p className=\"reviewDate\">{item.date.date}</p>\r\n                            <p><b>{item.title}</b></p>\r\n                            <p>{item.review}</p>\r\n                            <p><b>Rating -</b> {item.rating} out of 5</p>\r\n                            <hr/>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n\r\n            else{\r\n                return (\r\n                    <div>\r\n                        <h3>No Reviews Yet</h3>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <center>\r\n                        <img src=\"/images/loader.gif\" alt=\"loader\"/>\r\n                    </center>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"reviewHeading\">Top Reviews</h2>\r\n            {renderReviews(props.rData)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Review;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport DetailsDisplay from '../components/DetailsDisplay';\r\nimport Review from '../components/Review';\r\nimport { connect } from 'react-redux';\r\nimport { detail, review } from '../actions/actionfile';\r\n\r\n\r\nclass Detail extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            detData: {ProductDetails: null},\r\n            revData: {ProductReviews: null}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(detail(this.props.match.params.id));\r\n        this.props.dispatch(review(this.props.match.params.id));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            detData: nextProps.detailsData,\r\n            revData: nextProps.reviewData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n        return (\r\n            <React.Fragment>\r\n                <DetailsDisplay dData={this.state.detData.ProductDetails}/>\r\n                <hr/>\r\n                <Review rData={this.state.revData.ProductReviews}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDetail.prototypes = {\r\n    dispatch: propTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        detailsData: state.search,\r\n        reviewData: state.search\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Detail);","const About = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"panel panel-primary\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>About Us</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Similique soluta eos facilis, aut nostrum voluptatum eaque odio numquam alias molestiae fugiat dolorum sed minima porro magni distinctio laborum, officia quae.</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","const Contact = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"panel panel-primary\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>Contact Us</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Similique soluta eos facilis, aut nostrum voluptatum eaque odio numquam alias molestiae fugiat dolorum sed minima porro magni distinctio laborum, officia quae.</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { placeOrder } from '../actions/actionfile';\r\nimport './PlaceOrder.css';\r\n\r\nlet tdate = new Date();\r\n\r\nclass PlaceOrder extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fname: '',\r\n            lname: '',\r\n            houseadd: '',\r\n            apartment: '',\r\n            city: '',\r\n            state: '',\r\n            country: 'India',\r\n            postCode: '',\r\n            phone: '',\r\n            email: '',\r\n            productTitle: '',\r\n            beforePrice: '',\r\n            savingAmount: '',\r\n            currentPrice: 1,\r\n            quantity: 1,\r\n            totalPrice: 1,\r\n            payment: 'COD',\r\n            status: 'Order placed',\r\n            delivered: 'False',\r\n            errors: {\r\n                fname: '',\r\n                lname: '',\r\n                houseadd: '',\r\n                apartment: '',\r\n                city: '',\r\n                state: '',\r\n                postCode: '',\r\n                phone: '',\r\n                email: '',\r\n                payment: 'COD',\r\n                status: 'Order placed'\r\n            }\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        let productData = JSON.parse(sessionStorage.getItem('productData'))\r\n        this.setState({\r\n            productTitle: productData.product.title,\r\n            beforePrice: productData.product.price.before_price,\r\n            savingAmount: productData.product.price.savings_amount,\r\n            currentPrice: productData.product.price.current_price,\r\n            totalPrice: (productData.product.price.current_price) * (this.state.quantity)\r\n        }, () => console.log(this.state))\r\n    }\r\n    blurHandler = (name, value) => {\r\n        let errors = this.state.errors\r\n        let isnum = /^\\d+$/.test(value);\r\n        switch (name) {\r\n\r\n            case 'fname':\r\n            case 'lname':\r\n                if (value === '') {\r\n                    errors[name] = 'Name can not be blank'\r\n                }\r\n                else if (value.length < 3) {\r\n                    errors[name] = 'Name should be more than three letters'\r\n                }\r\n                else if (isnum) {\r\n                    errors[name] = 'Name should not be a number'\r\n                }\r\n                else {\r\n                    errors[name] = ''\r\n                }\r\n                break;\r\n            case 'houseadd':\r\n            case 'city':\r\n            case 'state':\r\n                if (value === '') {\r\n                    errors[name] = 'Field can not be blank'\r\n                }\r\n                else {\r\n                    errors[name] = ''\r\n                }\r\n                break;\r\n            case 'postCode':\r\n            case 'phone':\r\n                if (value === '') {\r\n                    errors[name] = 'Field can not be blank'\r\n                }\r\n                else if (value.length < 5) {\r\n                    errors[name] = 'Field should contain more than 5 digits'\r\n                }\r\n                else if (!isnum) {\r\n                    errors[name] = 'Should contain only number'\r\n                }\r\n                else {\r\n                    errors[name] = ''\r\n                }\r\n                break;\r\n            case 'email':\r\n                let lastAtpos = value.lastIndexOf('@')\r\n                let lastDotpos = value.lastIndexOf('.')\r\n                if (value === '') {\r\n                    errors[name] = 'Field can not be blank'\r\n                }\r\n\r\n                else if (!(lastAtpos < lastDotpos && lastAtpos > 0 && value.indexOf('@@') === -1 && lastDotpos > 2 && (value.length - lastDotpos) > 2)) {\r\n\r\n                    errors[name] = 'Email is not valid'\r\n                }\r\n                else {\r\n                    errors[name] = ''\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            errors, [name]: value\r\n        })\r\n    }\r\n    changeHandler = (name, value) => {\r\n        // console.log(name,value)\r\n        { this.blurHandler(name, value) }\r\n        this.setState({\r\n            [name]: value,\r\n\r\n        })\r\n        // console.log(this.state)\r\n    }\r\n    quantitychangeHandler = (value) => {\r\n        this.setState({\r\n            quantity: value,\r\n            totalPrice: this.state.currentPrice * value\r\n        })\r\n    }\r\n    onSubmit = () => {\r\n        // console.log(this.state)\r\n        let orderData = {\r\n            date: tdate.getDate()+'/'+(tdate.getMonth()+1)+'/'+tdate.getFullYear(),\r\n            fname: this.state.fname,\r\n            lname: this.state.lname,\r\n            houseadd: this.state.houseadd,\r\n            apartment: this.state.apartment,\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            country: this.state.country,\r\n            postCode: this.state.postCode,\r\n            phone: this.state.phone,\r\n            email: this.state.email,\r\n            productTitle: this.state.productTitle,\r\n            beforePrice: this.state.beforePrice,\r\n            savingAmount: this.state.savingAmount,\r\n            currentPrice: this.state.currentPrice,\r\n            quantity: this.state.quantity,\r\n            totalPrice: this.state.totalPrice,\r\n            payment: this.state.payment,\r\n            status: this.state.status,\r\n            delivered: this.state.delivered\r\n        }\r\n        if (orderData.fname === '' && orderData.lname === ''\r\n            && orderData.email === '' && orderData.phone === ''\r\n            && orderData.houseadd === '' && orderData.postCode === '') {\r\n                alert(\"All fields are required.\")\r\n        }\r\n        else {\r\n            this.props.dispatch(placeOrder(orderData));\r\n            alert(\"Your Order is Placed Successfully!\");\r\n            this.props.history.push('/orders');\r\n        }\r\n        // else{\r\n        //     console.log(\"from else\",orderData.fname)\r\n        //     return(\r\n        //         <div class=\"alert alert-success\" role=\"alert\">\r\n        //             <h4 class=\"alert-heading\">Well done!</h4>\r\n        //             <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n        //             <hr/>\r\n        //             <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n        //         </div>\r\n        //     );\r\n        // }\r\n\r\n\r\n    }\r\n    render() {\r\n        let productData = JSON.parse(sessionStorage.getItem('productData'))\r\n        return (\r\n            <div className=\"order-outer-container\">\r\n                <form>\r\n                <div className=\"container order-container\">\r\n                    <div className=\"order-title\">\r\n                        <h2 className=\"order-h2\">Product Order Form</h2>\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                        <form className=\"order-form\" >\r\n                            <label className=\"order-label\">\r\n                                <span className=\"fname\">First Name <span className=\"required\">*</span></span>\r\n                                <input type=\"text\" name=\"fname\" autoComplete=\"new-off\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.fname}</p>\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span className=\"lname\">Last Name <span className=\"required\">*</span></span>\r\n                                <input type=\"text\" name=\"lname\" autoComplete=\"new-off\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.lname}</p>\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>Address <span className=\"required\">*</span></span>\r\n                                <input type=\"text\" name=\"houseadd\" autoComplete=\"new-off\"\r\n                                    placeholder=\"House number and street name\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.houseadd}</p>\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>&nbsp;</span>\r\n                                <input type=\"text\" name=\"apartment\" autoComplete=\"new-off\"\r\n                                    placeholder=\"Apartment, suite, unit etc. (optional)\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)} />\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>Town / City <span className=\"required\">*</span></span>\r\n                                <input type=\"text\" name=\"city\" autoComplete=\"new-off\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.city}</p>\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>State <span className=\"required\">*</span></span>\r\n                                <input type=\"text\" name=\"state\" autoComplete=\"new-off\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.state}</p>\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>Country</span>\r\n                                <input type=\"text\" name=\"country\" value=\"India\" readOnly\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)} />\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>Postcode <span className=\"required\">*</span></span>\r\n                                <input type=\"text\" name=\"postCode\" autoComplete=\"new-off\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.postCode}</p>\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>Phone <span className=\"required\">*</span></span>\r\n                                <input type=\"tel\" name=\"phone\" autoComplete=\"new-off\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.phone}</p>\r\n                            </label>\r\n                            <label className=\"order-label\">\r\n                                <span>Email Address <span className=\"required\">*</span></span>\r\n                                <input type=\"email\" name=\"email\" autoComplete=\"new-off\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)}\r\n                                    onBlur={(event) => this.blurHandler(event.target.name, event.target.value)} />\r\n                                <p className=\"error-display\">{this.state.errors.email}</p>\r\n                            </label>\r\n                        </form>\r\n\r\n                        <div className=\"Yorder\">\r\n                            <table className=\"order-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th colSpan=\"2\">Your order</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Product Name</td>\r\n                                        <td className=\"order-product-name\">{productData.product.title}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Price</td>\r\n                                        <tr>\r\n                                            <td>Before: {productData.product.price.symbol}{productData.product.price.before_price}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Saving: {productData.product.price.symbol}{productData.product.price.savings_amount}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Now: {productData.product.price.symbol}{productData.product.price.current_price}</td>\r\n                                        </tr>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Quantity</td>\r\n                                        <td>\r\n                                            <select id=\"quantity\" name=\"quantity\"\r\n                                                onChange={(event) => this.quantitychangeHandler(event.target.value)}>\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                                <option value=\"5\">5</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total</td>\r\n                                        <td>{productData.product.price.symbol}{this.state.totalPrice}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Shipping</td>\r\n                                        <td>Free shipping</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table><br />\r\n                            <div className=\"radios\">\r\n                                <input type=\"radio\" name=\"payment\" value=\"NetBanking\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)} />\r\n                                <label className=\"order-label1\">Net Banking</label>\r\n                            </div>\r\n                            {/* <p className=\"order-disclaimer\">\r\n                                Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.\r\n                            </p> */}\r\n                            <div className=\"radios\">\r\n                                <input type=\"radio\" name=\"payment\" value=\"COD\" checked\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)} />\r\n                                <label className=\"order-label1\">Cash on Delivery</label>\r\n                            </div>\r\n                            <div className=\"radios\">\r\n                                <input type=\"radio\" name=\"payment\" value=\"CDcard\"\r\n                                    onChange={(event) => this.changeHandler(event.target.name, event.target.value)} />\r\n                                <label className=\"order-label1\">Credit / Debit Card</label>\r\n                                <span>\r\n                                    <img src=\"https://www.logolynx.com/images/logolynx/c3/c36093ca9fb6c250f74d319550acac4d.jpeg\" alt=\"\" width=\"50\" />\r\n                                </span>\r\n                            </div>\r\n                            <button className=\"order-button\" type=\"button\"\r\n                                onClick={this.onSubmit}>Place Order</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"from redux\",state.order.orderStatus)\r\n    return {\r\n        orderResponse: state.order.orderStatus\r\n\r\n    }\r\n}\r\nPlaceOrder.protoTypes = {\r\n    dispatch: PropTypes.func\r\n}\r\nexport default connect(mapStateToProps)(PlaceOrder)","import React from 'react';\r\n\r\nconst DashboardDisplay = (props) => {\r\n    const renderBody = (data) => {\r\n        const changeStatus = (e) => {\r\n            const bodyData = JSON.parse(e.target.value);\r\n\r\n            if(bodyData.delivered == 'False') {\r\n                bodyData.delivered = 'True';\r\n                fetch(`http://localhost:8900/order/${bodyData.id}`,\r\n                {method:'PUT',\r\n                headers: {\r\n                    'Accepct':'application/json',\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body: JSON.stringify(bodyData)\r\n                })\r\n                .then(res => res.json())\r\n                .then(() => {\r\n                    props.uStatus();\r\n                })\r\n            }\r\n            else{\r\n                bodyData.delivered = 'False';\r\n                fetch(`http://localhost:8900/order/${bodyData.id}`,\r\n                {method:'PUT',\r\n                headers: {\r\n                    'Accepct':'application/json',\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body: JSON.stringify(bodyData)\r\n                })\r\n                .then(res => res.json())\r\n                .then(() => {\r\n                    props.uStatus();\r\n                })\r\n            }\r\n        }\r\n\r\n        const renderDelivered = (status) => {\r\n            if(status==='True'){\r\n                return (<td style={{color:'green'}}>{status}</td>);\r\n            }\r\n            else{\r\n                return (<td style={{color:'red'}}>{status}</td>);\r\n            }\r\n            \r\n        }\r\n\r\n        if(data.allOrders) {\r\n            if(data.allOrders.length > 0) {\r\n                return data.allOrders.map((item) => {\r\n                    return (\r\n                        <tr key={item.id}>\r\n                            <td>{item.id}</td>\r\n                            <td>{item.date}</td>\r\n                            <td>{`${item.fname} ${item.lname}`}</td>\r\n                            <td>{`${item.houseadd}, ${item.apartment}, ${item.city}, ${item.state} ${item.postCode}`}</td>\r\n                            <td>{`${item.phone}/ ${item.email}`}</td>\r\n                            <td>{item.quantity}</td>\r\n                            <td>{item.totalPrice}</td>\r\n                            <td>{item.productTitle}</td>\r\n                            <td>{item.payment}</td>\r\n                            <td><button onClick={changeStatus} className=\"btn btn-primary\" value={JSON.stringify(item)}>Change</button></td>\r\n                            {renderDelivered(item.delivered)}\r\n                        </tr>\r\n                    );\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <table className=\"table table-responsive\">\r\n                    <thead style={{background:\"orange\"}}>\r\n                        <tr>\r\n                            <th>Order Id</th>\r\n                            <th>Date</th>\r\n                            <th>Name</th>\r\n                            <th>Address</th>\r\n                            <th>Phone/Email</th>\r\n                            <th>Qty.</th>\r\n                            <th>Amount</th>\r\n                            <th>Product</th>\r\n                            <th>Payment Mode</th>\r\n                            <th>Change Delivery Status</th>\r\n                            <th>Delivered</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody style={{background:\"#ecf3f9\"}}>\r\n                        {renderBody(props.oData)}\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DashboardDisplay;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { Admin } from '../actions/actionfile';\r\nimport DashboardDisplay from '../components/DashboardDisplay';\r\n\r\nclass Dashboard extends React.Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(Admin())\r\n    }\r\n\r\n    updateStatus = () => {\r\n        this.props.dispatch(Admin())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{overflowX:\"auto\"}}>\r\n                <DashboardDisplay oData={ this.props.orders } uStatus={() => {this.updateStatus()}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.prototypes = {\r\n    dispatch: propTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import { BrowserRouter, Route } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Home from '../container/Home';\r\nimport Search from '../container/Search';\r\nimport Detail from '../container/Detail';\r\nimport About from './About';\r\nimport Contact from './Contact';\r\nimport PlaceOrder from '../container/PlaceOrder';\r\nimport Dashboard from '../container/AdminDashboard';\r\n\r\nconst Routing = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Header/>\r\n            <Route exact path='/' component={Home}/>\r\n            <Route path='/search' component={Search}/>\r\n            <Route path='/detail/:id' component={Detail}/>\r\n            <Route path='/buynow' component={PlaceOrder}/>\r\n            <Route path='/about' component={About}/>\r\n            <Route path='/contact' component={Contact}/>\r\n            <Route path='/orders' component={Dashboard}/>\r\n            <Footer/>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routing;","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './store';\r\nimport Routing from './components/Routing';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={Store}>\r\n        <Routing/>\r\n    </Provider>, document.getElementById('root')\r\n)"],"sourceRoot":""}